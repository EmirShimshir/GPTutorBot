name: GPTutorBot-Build-and-Push

on:
  push:
    branches:
      - main

env:
  APP_IMAGE: gptutor-bot
  TAG: latest

jobs:
  build-and-push:
    name: Build and Push
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          ref: main

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Push to Docker Hub app image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.APP_IMAGE }}:${{ env.TAG }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          ref: main
      - name: Copy files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSHKEY }}
          source: "./ci-cd"
          target: "/app"
          strip_components: 1

      - name: Deploy ssh
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.IP  }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSHKEY }}
          command_timeout: 90m
          script: |
            export TELEGRAM_TOKEN="${{ secrets.TELEGRAM_TOKEN }}"
            export CHAT_GPT_API_KEY="${{ secrets.CHAT_GPT_API_KEY }}"
            export UMONEY_WALLET="${{ secrets.UMONEY_WALLET }}"
            export KEY_PAYMENT="${{ secrets.KEY_PAYMENT }}"
            export IP="${{ secrets.IP }}"
            
            export DOCKER_HUB_USERNAME="${{ secrets.DOCKER_HUB_USERNAME }}"
            export APP_IMAGE="${{ env.APP_IMAGE }}"
            export TAG="${{ env.TAG }}"
            
            cd /app/ci-cd
            docker-compose -f docker-compose.yaml stop
            docker-compose -f docker-compose.yaml pull
            docker-compose -f docker-compose.yaml up -d
            docker image prune -f --filter="dangling=true"
